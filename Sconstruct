import os
import glob
import sys

defaultenv	= Environment(ENV = os.environ)

linuxenv        = defaultenv.Clone(tools = ['default', 'textfile'], CCFLAGS = " -msse2 -flto -O2 -Wcast-align -g", CXXFLAGS = " -std=c++11 ", CFLAGS = " -std=c11 ", LINK = "g++")

windowsenv 	= defaultenv.Clone(CCFLAGS = "/O2 /EHsc")

win32env	= windowsenv.Clone()
win64env	= windowsenv.Clone()

linux32env	= linuxenv.Clone()
linux64env	= linuxenv.Clone()

shimfiles = ['glCopyImageSubData.c']

if sys.platform == 'win32' or sys.platform == 'win64':
    currentenv = win32env.Clone()
    shimfiles = ['glExtra.c']
    currentenv.Prepend(LIBS= ['GL'])
elif sys.platform.startswith('linux'):
    currentenv = linux32env.Clone()
    shimfiles = ['glExtra.c']
    currentenv.Prepend(LIBS= ['dl', 'pthread', 'X11', 'GL'])
elif sys.platform == 'darwin':
    currentenv = linux64env.Clone()
    currentenv.Append(CPPPATH = ['platform/osx', '/usr/local/include'] ,CPPDEFINES = ['FJGL_GLEXTRA_HEAD', 'SHIM_GL_COPYIMAGESUBDATA'])
    currentenv.Prepend(FRAMEWORKS= ['OpenGL'])
else:
    currentenv = linux64env.Clone()
    shimfiles = 'glExtra.c'
    currentenv.Prepend(LIBS= ['dl', 'pthread', 'X11', 'GL'])

files = ["api.c", "circle.c", "config.c", "image.c", "polygon.c", "init.cpp", "shader.cpp"] + shimfiles

libt5 = SConscript(dirs = ["libt5"])

currentenv.Append(CPPFLAGS = ' -DC_Plus_Plus ', LINKFLAGS = ' -fvisibility=default ', CPPPATH = ['libt5/t5']);

currentenv.Prepend(LIBS= ['SDL', libt5])

currentenv.SharedLibrary("fj-gl", files)
